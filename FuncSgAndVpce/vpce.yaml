AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy VPCEndpoints
#----------------------------------------------
Parameters:
  #------------------
  Environment:
    Type: String
    AllowedPattern: "[a-zA-Z0-9=-@+?[?]?<?>._]*"
    ConstraintDescription: Can contain only ASCII characters.
    Description: (required) Environment name

#----------------------------------------------
Resources:
  #------------------ Security Groups
  VPCEndpointSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${Environment}-VPCEndpointSG
      GroupDescription: Allow HTTPS(443)
      VpcId: 
        Fn::ImportValue: !Sub ${Environment}-VpcFunc-VpcId
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp:
            Fn::ImportValue: !Sub ${Environment}-VpcFunc-VpcCidr
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-VPCEndpointSG
  #------------------VPC Endpoint
  #---For STS
  #StsEndpoint:
  #  Type: 'AWS::EC2::VPCEndpoint'
  #  Properties:
  #    VpcId: 
  #      Fn::ImportValue: !Sub ${Environment}-VpcFunc-VpcId
  #    ServiceName: !Sub com.amazonaws.${AWS::Region}.sts
  #    VpcEndpointType: Interface
  #    PrivateDnsEnabled: yes
  #    SubnetIds:
  #      - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet1Id
  #      - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet2Id
  #    SecurityGroupIds: 
  #          - !Ref VPCEndpointSG
  #---For CloudFormation
  CloudFormationEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcId: 
        Fn::ImportValue: !Sub ${Environment}-VpcFunc-VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.cloudformation
      VpcEndpointType: Interface
      PrivateDnsEnabled: yes
      SubnetIds:
        - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet1Id
        - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet2Id
      SecurityGroupIds: 
            - !Ref VPCEndpointSG
  #---For System Manager and Session Manager
  SsmEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcId: 
        Fn::ImportValue: !Sub ${Environment}-VpcFunc-VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssm
      VpcEndpointType: Interface
      PrivateDnsEnabled: yes
      SubnetIds:
        - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet1Id
        - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet2Id
      SecurityGroupIds: 
            - !Ref VPCEndpointSG
  Ec2MessagesEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcId: 
        Fn::ImportValue: !Sub ${Environment}-VpcFunc-VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ec2messages
      VpcEndpointType: Interface
      PrivateDnsEnabled: yes
      SubnetIds:
        - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet1Id
        - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet2Id
      SecurityGroupIds: 
            - !Ref VPCEndpointSG
  SsmMessagesEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcId: 
        Fn::ImportValue: !Sub ${Environment}-VpcFunc-VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssmmessages
      VpcEndpointType: Interface
      PrivateDnsEnabled: yes
      SubnetIds:
        - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet1Id
        - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet2Id
      SecurityGroupIds: 
            - !Ref VPCEndpointSG
  #---For EC2
  Ec2Endpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcId: 
        Fn::ImportValue: !Sub ${Environment}-VpcFunc-VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ec2
      VpcEndpointType: Interface
      PrivateDnsEnabled: yes
      SubnetIds:
        - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet1Id
        - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet2Id
      SecurityGroupIds: 
            - !Ref VPCEndpointSG
  #---For CloudWatch and CloudWatch Logs
  #CloudWatchEndpoint:
  #  Type: 'AWS::EC2::VPCEndpoint'
  #  Properties:
  #    VpcId: 
  #      Fn::ImportValue: !Sub ${Environment}-VpcFunc-VpcId
  #    ServiceName: !Sub com.amazonaws.${AWS::Region}.events
  #    VpcEndpointType: Interface
  #    PrivateDnsEnabled: yes
  #    SubnetIds:
  #      - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet1Id
  #      - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet2Id
  #    SecurityGroupIds: 
  #          - !Ref VPCEndpointSG
  #LogsEndpoint:
  #  Type: 'AWS::EC2::VPCEndpoint'
  #  Properties:
  #    VpcId: 
  #      Fn::ImportValue: !Sub ${Environment}-VpcFunc-VpcId
  #    ServiceName: !Sub com.amazonaws.${AWS::Region}.logs
  #    VpcEndpointType: Interface
  #    PrivateDnsEnabled: yes
  #    SubnetIds:
  #      - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet1Id
  #      - Fn::ImportValue: !Sub ${Environment}-VpcFunc-PrivateSubnet2Id
  #    SecurityGroupIds: 
  #          - !Ref VPCEndpointSG